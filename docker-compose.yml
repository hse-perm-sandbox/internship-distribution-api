services:
  # Сервис PostgreSQL
  postgres:
    image: postgres:latest
    container_name: internship_pg
    restart: always  # Перезапуск при сбоях
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5

  # Сервис ASP.NET Web API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: internship_backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy  # Ждём, пока PostgreSQL будет готов
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ConnectionStrings__DefaultConnection: "Host=postgres;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}"
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      DEFAULT_MANAGER_EMAIL: ${DEFAULT_MANAGER_EMAIL}
      DEFAULT_MANAGER_PASSWORD: ${DEFAULT_MANAGER_PASSWORD}
    ports:
      - "8080:8080"

volumes:
  postgres_data:  # Том для сохранения данных PostgreSQL
